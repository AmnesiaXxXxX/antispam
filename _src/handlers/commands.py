from pyrogram import Client, filters
from pyrogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
import logging
import asyncio
from typing import List
import unidecode
from ..utils.filters import get_keywords
from ..utils.ban import ban_user, check_user
from ..utils.text_loader import load_text

@Client.on_message(filters.command(["start"]))
async def start(client: Client, message: Message):
    await message.reply(load_text("start"))

@Client.on_message(filters.command(["info"]))
async def info(client: Client, message: Message):
    await message.reply(load_text("info"))

async def start_command(client: Client, message: Message):
    await message.reply(
        """
<b>üëã –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!</b> –Ø <b>–∞–Ω—Ç–∏—Å–ø–∞–º-–±–æ—Ç</b>. üõ°Ô∏è
        
üìù <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã</b> 
–•–æ—Ç–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>/contact</b>. üì¨

üí° <b>–ï—Å—Ç—å –∏–¥–µ–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è?</b> 
–û–¥–º–µ–Ω—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –ø–∏—Å–∞—Ç—å —á–µ—Ä–µ–∑ —Ç–æ—Ç –∂–µ <b>/contact</b>. –ú—ã –∂–¥—ë–º –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è! ‚ú®

‚ÑπÔ∏è <b>–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∫–∞–∫ —è —Ä–∞–±–æ—Ç–∞—é?</b> 
–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π <b>/info</b> –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π. üîç
        """
    )

@Client.on_message(filters.command(["add_badword"]))
async def add_badword(client, message: Message):
    word = " ".join(message.text.split(" ")[1:])
    with open("bad_words.txt", "a", encoding="utf-8") as f:
        f.write(f"\n{unidecode.unidecode(word.lower())}")
    keywords = get_keywords()
    await message.reply(
        f"–î–æ–±–∞–≤–ª–µ–Ω–æ —Å–ª–æ–≤–æ: {word}\n–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤:\n{', '.join(keywords)}"
    )

@Client.on_message(filters.command(["ban"]) & filters.user(5957115070))
async def ban(client: Client, message: Message):
    if message.reply_to_message:
        user_id = message.reply_to_message.from_user.id
    elif message.text.split(" ")[1:]:
        user_id = int(message.text.split(" ")[1])
    else:
        await message.reply("–£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.")
        return
    if not user_id:
        return
    await ban_user(client, user_id)
    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{user_id}` –∑–∞–±–∞–Ω–µ–Ω.")

def register_commands(bot: Client):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    commands = [
        start_command,
        add_badword,
        ban,
        # –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    ]
    
    for command in commands:
        bot.on_message(filters.command([command.__name__.replace("_command", "")])(command))
